# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-24.04
          - ubuntu-latest
        GOOS:
          - linux
          - linux
          - linux
          - windows
        artifactName:
          - linux-with-glibc2.31-ubuntu20
          - linux-with-glibc2.35-ubuntu22
          - linux-with-glibc2.39-ubuntu24
          - windows
        artifactPath:
          - network-guard
          - network-guard
          - network-guard
          - network-guard.exe
    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Install libpcap-dev
      run: sudo apt install -y libpcap-dev
    - name: Fetch mac vendor db
      run: wget "https://maclookup.app/downloads/json-database/get-db" -O src/mac-vendors-export.json
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.23.4
    - name: Build
      run: GOOS=${{ matrix.GOOS }} GOARCH=amd64 go build -v ./...
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        name: ${{ matrix.artifactName }}
        path: ${{ matrix.artifactPath }}
